

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Mon Jan 13 07:55:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	idataCOMRAM
    29  000D02                     __pidataCOMRAM:
    30                           	opt stack 0
    31                           
    32                           ;initializer for main@F4951
    33  000D02  0D                 	db	13
    34  000D03  53                 	db	83
    35  000D04  74                 	db	116
    36  000D05  61                 	db	97
    37  000D06  72                 	db	114
    38  000D07  74                 	db	116
    39  000D08  21                 	db	33
    40  000D09  21                 	db	33
    41  000D0A  0A                 	db	10
    42  000D0B  00                 	db	0
    43                           
    44                           ;initializer for main@F4953
    45  000D0C  46                 	db	70
    46  000D0D  55                 	db	85
    47  000D0E  4B                 	db	75
    48  000D0F  55                 	db	85
    49  000D10  44                 	db	68
    50  000D11  41                 	db	65
    51  000D12  00                 	db	0
    52                           
    53                           	psect	smallconst
    54  000800                     __psmallconst:
    55                           	opt stack 0
    56  000800                     _dpowers:
    57                           	opt stack 0
    58  000800  0001               	dw	1
    59  000802  0000               	dw	0
    60  000804  000A               	dw	10
    61  000806  0000               	dw	0
    62  000808  0064               	dw	100
    63  00080A  0000               	dw	0
    64  00080C  03E8               	dw	1000
    65  00080E  0000               	dw	0
    66  000810  2710               	dw	10000
    67  000812  0000               	dw	0
    68  000814  86A0               	dw	34464
    69  000816  0001               	dw	1
    70  000818  4240               	dw	16960
    71  00081A  000F               	dw	15
    72  00081C  9680               	dw	38528
    73  00081E  0098               	dw	152
    74  000820  E100               	dw	57600
    75  000822  05F5               	dw	1525
    76  000824  CA00               	dw	51712
    77  000826  3B9A               	dw	15258
    78  000828                     __end_of_dpowers:
    79                           	opt stack 0
    80  0000                     _ADCON0	set	4034
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _ADCON1	set	4033
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADRESH	set	4036
    85  0000                     _ADRESL	set	4035
    86  0000                     _INTCONbits	set	4082
    87  0000                     _PIE1bits	set	3997
    88  0000                     _PIR1bits	set	3998
    89  0000                     _RCSTA	set	4011
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _SPBRG	set	4015
    92  0000                     _SPBRGH	set	4016
    93  0000                     _TRISA	set	3986
    94  0000                     _TRISB	set	3987
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISCbits	set	3988
    97  0000                     _TXREG	set	4013
    98  0000                     _TXSTA	set	4012
    99  0000                     _TXSTAbits	set	4012
   100  000828                     __stringdata:
   101                           	opt stack 0
   102  000828                     STR_1:
   103  000828  0D                 	db	13
   104  000829  48                 	db	72	;'H'
   105  00082A  65                 	db	101	;'e'
   106  00082B  6C                 	db	108	;'l'
   107  00082C  6C                 	db	108	;'l'
   108  00082D  6F                 	db	111	;'o'
   109  00082E  20                 	db	32
   110  00082F  77                 	db	119	;'w'
   111  000830  6F                 	db	111	;'o'
   112  000831  72                 	db	114	;'r'
   113  000832  6C                 	db	108	;'l'
   114  000833  64                 	db	100	;'d'
   115  000834  0A                 	db	10
   116  000835  00                 	db	0
   117  000836                     STR_2:
   118  000836  0D                 	db	13
   119  000837  64                 	db	100	;'d'
   120  000838  61                 	db	97	;'a'
   121  000839  74                 	db	116	;'t'
   122  00083A  61                 	db	97	;'a'
   123  00083B  3D                 	db	61	;'='
   124  00083C  25                 	db	37
   125  00083D  6C                 	db	108	;'l'
   126  00083E  64                 	db	100	;'d'
   127  00083F  0A                 	db	10
   128  000840  00                 	db	0
   129  000841                     __end_of__stringdata:
   130                           	opt stack 0
   131                           
   132                           ; #config settings
   133  000841  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           	psect	cinit
   136  000C9A                     __pcinit:
   137                           	opt stack 0
   138  000C9A                     start_initialization:
   139                           	opt stack 0
   140  000C9A                     __initialization:
   141                           	opt stack 0
   142                           
   143                           ; Clear objects allocated to COMRAM (1 bytes)
   144  000C9A  6A58               	clrf	__pbssCOMRAM& (0+255),c
   145                           
   146                           ; Initialize objects allocated to COMRAM (17 bytes)
   147                           ; load TBLPTR registers with __pidataCOMRAM
   148  000C9C  0E02               	movlw	low __pidataCOMRAM
   149  000C9E  6EF6               	movwf	tblptrl,c
   150  000CA0  0E0D               	movlw	high __pidataCOMRAM
   151  000CA2  6EF7               	movwf	tblptrh,c
   152  000CA4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   153  000CA6  6EF8               	movwf	tblptru,c
   154  000CA8  EE00  F047         	lfsr	0,__pdataCOMRAM
   155  000CAC  EE10 F011          	lfsr	1,17
   156  000CB0                     copy_data0:
   157  000CB0  0009               	tblrd		*+
   158  000CB2  CFF5 FFEE          	movff	tablat,postinc0
   159  000CB6  50E5               	movf	postdec1,w,c
   160  000CB8  50E1               	movf	fsr1l,w,c
   161  000CBA  E1FA               	bnz	copy_data0
   162  000CBC                     end_of_initialization:
   163                           	opt stack 0
   164  000CBC                     __end_of__initialization:
   165                           	opt stack 0
   166  000CBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167  000CBE  6EF8               	movwf	tblptru,c
   168  000CC0  0100               	movlb	0
   169  000CC2  EFFC  F004         	goto	_main	;jump to C main() function
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	bssCOMRAM
   179  000058                     __pbssCOMRAM:
   180                           	opt stack 0
   181  000058                     _USART_Status:
   182                           	opt stack 0
   183  000058                     	ds	1
   184                           tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           postinc0	equ	0xFEE
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	dataCOMRAM
   193  000047                     __pdataCOMRAM:
   194                           	opt stack 0
   195  000047                     main@F4951:
   196                           	opt stack 0
   197  000047                     	ds	10
   198  000051                     main@F4953:
   199                           	opt stack 0
   200  000051                     	ds	7
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	cstackCOMRAM
   210  000001                     __pcstackCOMRAM:
   211                           	opt stack 0
   212  000001                     ?_OpenUSART:
   213                           	opt stack 0
   214  000001                     ?_OpenADC:
   215                           	opt stack 0
   216  000001                     ?_SetChanADC:
   217                           	opt stack 0
   218  000001                     ?_Delay100TCYx:
   219                           	opt stack 0
   220  000001                     ?_putch:
   221                           	opt stack 0
   222  000001                     ?_WriteUSART:
   223                           	opt stack 0
   224  000001                     ?_ReadADC:
   225                           	opt stack 0
   226  000001                     ?___lldiv:
   227                           	opt stack 0
   228  000001                     OpenADC@config:
   229                           	opt stack 0
   230  000001                     SetChanADC@channel:
   231                           	opt stack 0
   232  000001                     OpenUSART@config:
   233                           	opt stack 0
   234  000001                     WriteUSART@data:
   235                           	opt stack 0
   236  000001                     Delay100TCYx@unit:
   237                           	opt stack 0
   238  000001                     ___lldiv@dividend:
   239                           	opt stack 0
   240                           
   241                           ; 4 bytes @ 0x0
   242  000001                     	ds	1
   243  000002                     ??_SetChanADC:
   244  000002                     ?_putsUSART:
   245                           	opt stack 0
   246  000002                     OpenADC@config2:
   247                           	opt stack 0
   248  000002                     OpenUSART@spbrg:
   249                           	opt stack 0
   250  000002                     putsUSART@data:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x1
   254  000002                     	ds	1
   255  000003                     OpenADC@portconfig:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x2
   259  000003                     	ds	1
   260  000004                     ??_OpenADC:
   261  000004                     
   262                           ; 0 bytes @ 0x3
   263  000004                     	ds	1
   264  000005                     ___lldiv@divisor:
   265                           	opt stack 0
   266                           
   267                           ; 4 bytes @ 0x4
   268  000005                     	ds	4
   269  000009                     ??___lldiv:
   270                           
   271                           ; 0 bytes @ 0x8
   272  000009                     	ds	1
   273  00000A                     ___lldiv@quotient:
   274                           	opt stack 0
   275                           
   276                           ; 4 bytes @ 0x9
   277  00000A                     	ds	4
   278  00000E                     ___lldiv@counter:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0xD
   282  00000E                     	ds	1
   283  00000F                     ?___llmod:
   284                           	opt stack 0
   285  00000F                     ___llmod@dividend:
   286                           	opt stack 0
   287                           
   288                           ; 4 bytes @ 0xE
   289  00000F                     	ds	4
   290  000013                     ___llmod@divisor:
   291                           	opt stack 0
   292                           
   293                           ; 4 bytes @ 0x12
   294  000013                     	ds	4
   295  000017                     ??___llmod:
   296                           
   297                           ; 0 bytes @ 0x16
   298  000017                     	ds	1
   299  000018                     ___llmod@counter:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x17
   303  000018                     	ds	1
   304  000019                     ?_printf:
   305                           	opt stack 0
   306  000019                     printf@f:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x18
   310  000019                     	ds	6
   311  00001F                     ??_printf:
   312                           
   313                           ; 0 bytes @ 0x1E
   314  00001F                     	ds	2
   315  000021                     printf@prec:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x20
   319  000021                     	ds	2
   320  000023                     printf@ap:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x22
   324  000023                     	ds	2
   325  000025                     printf@flag:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x24
   329  000025                     	ds	1
   330  000026                     printf@_val:
   331                           	opt stack 0
   332                           
   333                           ; 5 bytes @ 0x25
   334  000026                     	ds	5
   335  00002B                     printf@c:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x2A
   339  00002B                     	ds	1
   340  00002C                     ??_main:
   341                           
   342                           ; 0 bytes @ 0x2B
   343  00002C                     	ds	3
   344  00002F                     main@Message2:
   345                           	opt stack 0
   346                           
   347                           ; 7 bytes @ 0x2E
   348  00002F                     	ds	7
   349  000036                     main@Message1:
   350                           	opt stack 0
   351                           
   352                           ; 10 bytes @ 0x35
   353  000036                     	ds	10
   354  000040                     main@DATA:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x3F
   358  000040                     	ds	3
   359  000043                     main@data:
   360                           	opt stack 0
   361                           
   362                           ; 4 bytes @ 0x42
   363  000043                     	ds	4
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 52 in file "C:\Users\FMV\Dropbox\PIC-project\PIC_XC8\pic18f2550\AD\AD.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  Message1       10   53[COMRAM] unsigned char [10]
   382 ;;  Message2        7   46[COMRAM] unsigned char [7]
   383 ;;  data            4   66[COMRAM] long 
   384 ;;  DATA            3   63[COMRAM] float 
   385 ;; Return value:  Size  Location     Type
   386 ;;		None               void
   387 ;; Registers used:
   388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   394 ;;      Params:         0       0       0       0       0       0       0       0       0
   395 ;;      Locals:        24       0       0       0       0       0       0       0       0
   396 ;;      Temps:          3       0       0       0       0       0       0       0       0
   397 ;;      Totals:        27       0       0       0       0       0       0       0       0
   398 ;;Total ram usage:       27 bytes
   399 ;; Hardware stack levels required when called:    2
   400 ;; This function calls:
   401 ;;		_OpenUSART
   402 ;;		_OpenADC
   403 ;;		_SetChanADC
   404 ;;		_putsUSART
   405 ;;		_printf
   406 ;;		_Delay100TCYx
   407 ;;		_ConvertADC
   408 ;;		_BusyADC
   409 ;;		_ReadADC
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text0
   416  0009F8                     __ptext0:
   417                           	opt stack 0
   418  0009F8                     _main:
   419                           	opt stack 29
   420                           
   421                           ;AD.c: 54: char Message1[10]="\rStart!!\n";
   422                           
   423                           ;incstack = 0
   424                           ;incstack = 0
   425  0009F8  EE20  F047         	lfsr	2,main@F4951
   426  0009FC  EE10  F036         	lfsr	1,main@Message1
   427  000A00  0E0A               	movlw	10
   428  000A02                     u311:
   429  000A02  CFDE FFE6          	movff	postinc2,postinc1
   430  000A06  2EE8               	decfsz	wreg,f,c
   431  000A08  D7FC               	goto	u311
   432                           
   433                           ;AD.c: 55: char Message2[7]="FUKUDA";
   434  000A0A  EE20  F051         	lfsr	2,main@F4953
   435  000A0E  EE10  F02F         	lfsr	1,main@Message2
   436  000A12  0E07               	movlw	7
   437  000A14                     u321:
   438  000A14  CFDE FFE6          	movff	postinc2,postinc1
   439  000A18  2EE8               	decfsz	wreg,f,c
   440  000A1A  D7FC               	goto	u321
   441                           
   442                           ;AD.c: 56: long int data=0;
   443  000A1C  0E00               	movlw	0
   444  000A1E  6E43               	movwf	main@data,c
   445  000A20  0E00               	movlw	0
   446  000A22  6E44               	movwf	main@data+1,c
   447  000A24  0E00               	movlw	0
   448  000A26  6E45               	movwf	main@data+2,c
   449  000A28  0E00               	movlw	0
   450  000A2A  6E46               	movwf	main@data+3,c
   451                           
   452                           ;AD.c: 57: float DATA=0;
   453  000A2C  0E00               	movlw	0
   454  000A2E  6E40               	movwf	main@DATA,c
   455  000A30  0E00               	movlw	0
   456  000A32  6E41               	movwf	main@DATA+1,c
   457  000A34  0E00               	movlw	0
   458  000A36  6E42               	movwf	main@DATA+2,c
   459                           
   460                           ;AD.c: 60: OpenUSART(0b01111111 & 0b10111111 &
   461                           ;AD.c: 61: 0b11111110 & 0b11111101 &
   462                           ;AD.c: 62: 0b11111111 & 0b11101111, 77);
   463  000A38  6E2C               	movwf	??_main& (0+255),c
   464  000A3A  0E2C               	movlw	44
   465  000A3C  6E01               	movwf	?_OpenUSART,c
   466  000A3E  502C               	movf	??_main& (0+255),w,c
   467  000A40  0E00               	movlw	0
   468  000A42  6E03               	movwf	?_OpenUSART+2,c
   469  000A44  0E4D               	movlw	77
   470  000A46  6E02               	movwf	?_OpenUSART+1,c
   471  000A48  EC1F  F006         	call	_OpenUSART	;wreg free
   472                           
   473                           ;AD.c: 67: OpenADC(0b11101111 &
   474                           ;AD.c: 68: 0b11111111 &
   475                           ;AD.c: 69: 0b11111001,
   476                           ;AD.c: 70: 0b10000111 &
   477                           ;AD.c: 71: 0b01111111 &
   478                           ;AD.c: 72: 0b11111110 &
   479                           ;AD.c: 73: 0b11111101,
   480                           ;AD.c: 74: 0b1110
   481                           ;AD.c: 76: );
   482  000A4C  6E2C               	movwf	??_main& (0+255),c
   483  000A4E  0EE9               	movlw	233
   484  000A50  6E01               	movwf	?_OpenADC,c
   485  000A52  502C               	movf	??_main& (0+255),w,c
   486  000A54  6E2D               	movwf	(??_main+1)& (0+255),c
   487  000A56  0E04               	movlw	4
   488  000A58  6E02               	movwf	?_OpenADC+1,c
   489  000A5A  502D               	movf	(??_main+1)& (0+255),w,c
   490  000A5C  6E2E               	movwf	(??_main+2)& (0+255),c
   491  000A5E  0E0E               	movlw	14
   492  000A60  6E03               	movwf	?_OpenADC+2,c
   493  000A62  502E               	movf	(??_main+2)& (0+255),w,c
   494  000A64  ECF1  F005         	call	_OpenADC	;wreg free
   495                           
   496                           ;AD.c: 79: SetChanADC(0b10000111);
   497  000A68  6E2C               	movwf	??_main& (0+255),c
   498  000A6A  0E87               	movlw	135
   499  000A6C  6E01               	movwf	?_SetChanADC,c
   500  000A6E  502C               	movf	??_main& (0+255),w,c
   501  000A70  EC77  F006         	call	_SetChanADC	;wreg free
   502                           
   503                           ;AD.c: 81: TRISA=0x0F;
   504  000A74  0E0F               	movlw	15
   505  000A76  6E92               	movwf	3986,c	;volatile
   506                           
   507                           ;AD.c: 82: TRISB=0;
   508  000A78  0E00               	movlw	0
   509  000A7A  6E93               	movwf	3987,c	;volatile
   510                           
   511                           ;AD.c: 83: TRISC=0b10111111;
   512  000A7C  0EBF               	movlw	191
   513  000A7E  6E94               	movwf	3988,c	;volatile
   514                           
   515                           ;AD.c: 84: putsUSART(Message1);
   516  000A80  0E00               	movlw	high main@Message1
   517  000A82  6E03               	movwf	?_putsUSART+1,c
   518  000A84  0E36               	movlw	low main@Message1
   519  000A86  6E02               	movwf	?_putsUSART,c
   520  000A88  EC63  F006         	call	_putsUSART	;wreg free
   521                           
   522                           ;AD.c: 85: printf("\rHello world\n");
   523  000A8C  0E08               	movlw	high STR_1
   524  000A8E  6E1A               	movwf	?_printf+1,c
   525  000A90  0E28               	movlw	low STR_1
   526  000A92  6E19               	movwf	?_printf,c
   527  000A94  EC21  F004         	call	_printf	;wreg free
   528  000A98                     l985:
   529                           
   530                           ;AD.c: 87: {
   531                           ;AD.c: 90: SetChanADC(0b10000111);
   532  000A98  6E2C               	movwf	??_main& (0+255),c
   533  000A9A  0E87               	movlw	135
   534  000A9C  6E01               	movwf	?_SetChanADC,c
   535  000A9E  502C               	movf	??_main& (0+255),w,c
   536  000AA0  EC77  F006         	call	_SetChanADC	;wreg free
   537                           
   538                           ;AD.c: 91: Delay100TCYx(5);
   539  000AA4  6E2C               	movwf	??_main& (0+255),c
   540  000AA6  0E05               	movlw	5
   541  000AA8  6E01               	movwf	?_Delay100TCYx,c
   542  000AAA  502C               	movf	??_main& (0+255),w,c
   543  000AAC  EC92  F006         	call	_Delay100TCYx	;wreg free
   544                           
   545                           ;AD.c: 92: ConvertADC();
   546  000AB0  ECA1  F006         	call	_ConvertADC	;wreg free
   547  000AB4                     l991:
   548  000AB4  EC9E  F006         	call	_BusyADC	;wreg free
   549  000AB8  0900               	iorlw	0
   550  000ABA  A4D8               	btfss	status,2,c
   551  000ABC  D7FB               	goto	l991
   552                           
   553                           ;AD.c: 94: data = ReadADC();
   554  000ABE  EC99  F006         	call	_ReadADC	;wreg free
   555  000AC2  C001  F043         	movff	?_ReadADC,main@data
   556  000AC6  C002  F044         	movff	?_ReadADC+1,main@data+1
   557  000ACA  0E00               	movlw	0
   558  000ACC  BE44               	btfsc	main@data+1,7,c
   559  000ACE  0EFF               	movlw	-1
   560  000AD0  6E45               	movwf	main@data+2,c
   561  000AD2  6E46               	movwf	main@data+3,c
   562                           
   563                           ;AD.c: 97: printf("\rdata=%ld\n",data);
   564  000AD4  0E08               	movlw	high STR_2
   565  000AD6  6E1A               	movwf	?_printf+1,c
   566  000AD8  0E36               	movlw	low STR_2
   567  000ADA  6E19               	movwf	?_printf,c
   568  000ADC  C043  F01B         	movff	main@data,?_printf+2
   569  000AE0  C044  F01C         	movff	main@data+1,?_printf+3
   570  000AE4  C045  F01D         	movff	main@data+2,?_printf+4
   571  000AE8  C046  F01E         	movff	main@data+3,?_printf+5
   572  000AEC  EC21  F004         	call	_printf	;wreg free
   573  000AF0  D7D3               	goto	l985
   574  000AF2                     __end_of_main:
   575                           	opt stack 0
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           postinc1	equ	0xFE6
   583                           postdec1	equ	0xFE5
   584                           fsr1l	equ	0xFE1
   585                           postinc2	equ	0xFDE
   586                           status	equ	0xFD8
   587                           
   588 ;; *************** function _ReadADC *****************
   589 ;; Defined at:
   590 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcread.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2    0[COMRAM] int 
   597 ;; Registers used:
   598 ;;		wreg, status,2
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   604 ;;      Params:         2       0       0       0       0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0
   607 ;;      Totals:         2       0       0       0       0       0       0       0       0
   608 ;;Total ram usage:        2 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text1
   618  000D32                     __ptext1:
   619                           	opt stack 0
   620  000D32                     _ReadADC:
   621                           	opt stack 30
   622                           
   623                           ;incstack = 0
   624                           ;incstack = 0
   625  000D32  50C4               	movf	4036,w,c	;volatile
   626  000D34  6E02               	movwf	?_ReadADC+1,c
   627  000D36  50C3               	movf	4035,w,c	;volatile
   628  000D38  6E01               	movwf	?_ReadADC,c
   629  000D3A  0012               	return	
   630  000D3C                     __end_of_ReadADC:
   631                           	opt stack 0
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           tblptrl	equ	0xFF6
   635                           tablat	equ	0xFF5
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           postinc1	equ	0xFE6
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           postinc2	equ	0xFDE
   642                           status	equ	0xFD8
   643                           
   644 ;; *************** function _BusyADC *****************
   645 ;; Defined at:
   646 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcbusy.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      unsigned char 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   660 ;;      Params:         0       0       0       0       0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text2
   674  000D3C                     __ptext2:
   675                           	opt stack 0
   676  000D3C                     _BusyADC:
   677                           	opt stack 30
   678                           
   679                           ;incstack = 0
   680                           ;incstack = 0
   681  000D3C  30C2               	rrcf	4034,w,c	;volatile
   682  000D3E  0B01               	andlw	1
   683  000D40  0012               	return	
   684  000D42                     __end_of_BusyADC:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           postinc1	equ	0xFE6
   693                           postdec1	equ	0xFE5
   694                           fsr1l	equ	0xFE1
   695                           postinc2	equ	0xFDE
   696                           status	equ	0xFD8
   697                           
   698 ;; *************** function _ConvertADC *****************
   699 ;; Defined at:
   700 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;		None               void
   707 ;; Registers used:
   708 ;;		None
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   714 ;;      Params:         0       0       0       0       0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text3
   728  000D42                     __ptext3:
   729                           	opt stack 0
   730  000D42                     _ConvertADC:
   731                           	opt stack 30
   732                           
   733                           ;incstack = 0
   734                           ;incstack = 0
   735  000D42  82C2               	bsf	4034,1,c	;volatile
   736  000D44  0012               	return	
   737  000D46                     __end_of_ConvertADC:
   738                           	opt stack 0
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           postinc0	equ	0xFEE
   744                           wreg	equ	0xFE8
   745                           postinc1	equ	0xFE6
   746                           postdec1	equ	0xFE5
   747                           fsr1l	equ	0xFE1
   748                           postinc2	equ	0xFDE
   749                           status	equ	0xFD8
   750                           
   751 ;; *************** function _Delay100TCYx *****************
   752 ;; Defined at:
   753 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d100tcyx.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  unit            1    0[COMRAM] unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;		None               void
   760 ;; Registers used:
   761 ;;		wreg
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   767 ;;      Params:         1       0       0       0       0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0       0       0
   770 ;;      Totals:         1       0       0       0       0       0       0       0       0
   771 ;;Total ram usage:        1 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text4
   781  000D24                     __ptext4:
   782                           	opt stack 0
   783  000D24                     _Delay100TCYx:
   784                           	opt stack 30
   785  000D24                     l378:
   786  000D24  0E21               	movlw	33
   787  000D26                     u347:
   788  000D26  2EE8               	decfsz	wreg,f,c
   789  000D28  D7FE               	goto	u347
   790  000D2A  F000               	nop	
   791  000D2C  2E01               	decfsz	Delay100TCYx@unit,f,c
   792  000D2E  D7FA               	goto	l378
   793  000D30  0012               	return	
   794  000D32                     __end_of_Delay100TCYx:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           postinc1	equ	0xFE6
   803                           postdec1	equ	0xFE5
   804                           fsr1l	equ	0xFE1
   805                           postinc2	equ	0xFDE
   806                           status	equ	0xFD8
   807                           
   808 ;; *************** function _printf *****************
   809 ;; Defined at:
   810 ;;		line 465 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\doprnt.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  f               2   24[COMRAM] PTR const unsigned char 
   813 ;;		 -> STR_2(11), STR_1(14), 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  _val            5   37[COMRAM] struct .
   816 ;;  ap              2   34[COMRAM] PTR void [1]
   817 ;;		 -> ?_printf(2), 
   818 ;;  prec            2   32[COMRAM] int 
   819 ;;  c               1   42[COMRAM] char 
   820 ;;  flag            1   36[COMRAM] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  2   24[COMRAM] int 
   823 ;; Registers used:
   824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         6       0       0       0       0       0       0       0       0
   831 ;;      Locals:        11       0       0       0       0       0       0       0       0
   832 ;;      Temps:          2       0       0       0       0       0       0       0       0
   833 ;;      Totals:        19       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:       19 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    1
   837 ;; This function calls:
   838 ;;		_putch
   839 ;;		___lldiv
   840 ;;		___llmod
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text5
   847  000842                     __ptext5:
   848                           	opt stack 0
   849  000842                     _printf:
   850                           	opt stack 29
   851                           
   852                           ;doprnt.c: 466: va_list ap;
   853                           ;doprnt.c: 499: signed char c;
   854                           ;doprnt.c: 504: int prec;
   855                           ;doprnt.c: 508: unsigned char flag;
   856                           ;doprnt.c: 527: union {
   857                           ;doprnt.c: 528: unsigned long _val;
   858                           ;doprnt.c: 529: struct {
   859                           ;doprnt.c: 530: const char * _cp;
   860                           ;doprnt.c: 531: unsigned _len;
   861                           ;doprnt.c: 532: } _str;
   862                           ;doprnt.c: 533: } _val;
   863                           ;doprnt.c: 542: *ap = __va_start();
   864                           
   865                           ;incstack = 0
   866                           ;incstack = 0
   867  000842  0E00               	movlw	high (?_printf+2)
   868  000844  6E24               	movwf	printf@ap+1,c
   869  000846  0E1B               	movlw	low (?_printf+2)
   870  000848  6E23               	movwf	printf@ap,c
   871                           
   872                           ;doprnt.c: 545: while(c = *f++) {
   873  00084A  D0CA               	goto	l961
   874  00084C                     l909:
   875                           
   876                           ;doprnt.c: 547: if(c != '%')
   877  00084C  502B               	movf	printf@c,w,c
   878  00084E  0A25               	xorlw	37
   879  000850  B4D8               	btfsc	status,2,c
   880  000852  D005               	goto	l913
   881                           
   882                           ;doprnt.c: 549: {
   883                           ;doprnt.c: 550: (putch(c) );
   884  000854  C02B  F001         	movff	printf@c,?_putch
   885  000858  ECA3  F006         	call	_putch	;wreg free
   886                           
   887                           ;doprnt.c: 551: continue;
   888  00085C  D0C1               	goto	l961
   889  00085E                     l913:
   890                           
   891                           ;doprnt.c: 552: }
   892                           ;doprnt.c: 557: flag = 0;
   893  00085E  6E1F               	movwf	??_printf& (0+255),c
   894  000860  0E00               	movlw	0
   895  000862  6E25               	movwf	printf@flag,c
   896  000864  501F               	movf	??_printf& (0+255),w,c
   897  000866  D001               	goto	l919
   898  000868                     l915:
   899                           
   900                           ;doprnt.c: 652: flag |= 0x10;
   901  000868  8825               	bsf	printf@flag,4,c
   902  00086A                     l919:
   903  00086A  C019  FFF6         	movff	printf@f,tblptrl
   904  00086E  C01A  FFF7         	movff	printf@f+1,tblptrh
   905  000872  4A19               	infsnz	printf@f,f,c
   906  000874  2A1A               	incf	printf@f+1,f,c
   907  000876  0008               	tblrd		*
   908  000878  CFF5 F02B          	movff	tablat,printf@c
   909  00087C  502B               	movf	printf@c& (0+255),w,c
   910                           
   911                           ; Switch size 1, requested type "space"
   912                           ; Number of cases is 4, Range of values is 0 to 108
   913                           ; switch strategies available:
   914                           ; Name         Instructions Cycles
   915                           ; simple_byte           13     7 (average)
   916                           ;	Chosen strategy is simple_byte
   917  00087E  0A00               	xorlw	0	; case 0
   918  000880  B4D8               	btfsc	status,2,c
   919  000882  D0B9               	goto	l71
   920  000884  0A64               	xorlw	100	; case 100
   921  000886  B4D8               	btfsc	status,2,c
   922  000888  D007               	goto	l58
   923  00088A  0A0D               	xorlw	13	; case 105
   924  00088C  B4D8               	btfsc	status,2,c
   925  00088E  D004               	goto	l58
   926  000890  0A05               	xorlw	5	; case 108
   927  000892  B4D8               	btfsc	status,2,c
   928  000894  D7E9               	goto	l915
   929  000896  D0A4               	goto	l961
   930  000898                     l58:
   931                           
   932                           ;doprnt.c: 1260: {
   933                           ;doprnt.c: 1262: if(flag & 0x10)
   934  000898  A825               	btfss	printf@flag,4,c
   935  00089A  D00E               	goto	l925
   936                           
   937                           ;doprnt.c: 1263: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
   938  00089C  C023  FFD9         	movff	printf@ap,fsr2l
   939  0008A0  C024  FFDA         	movff	printf@ap+1,fsr2h
   940  0008A4  CFDE F026          	movff	postinc2,printf@_val
   941  0008A8  CFDE F027          	movff	postinc2,printf@_val+1
   942  0008AC  CFDE F028          	movff	postinc2,printf@_val+2
   943  0008B0  CFDE F029          	movff	postinc2,printf@_val+3
   944  0008B4  0E04               	movlw	4
   945  0008B6  D00E               	goto	L1
   946  0008B8                     l925:
   947                           
   948                           ;doprnt.c: 1264: else
   949                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
   950  0008B8  C023  FFD9         	movff	printf@ap,fsr2l
   951  0008BC  C024  FFDA         	movff	printf@ap+1,fsr2h
   952  0008C0  CFDE F026          	movff	postinc2,printf@_val
   953  0008C4  CFDD F027          	movff	postdec2,printf@_val+1
   954  0008C8  0E00               	movlw	0
   955  0008CA  BE27               	btfsc	printf@_val+1,7,c
   956  0008CC  0EFF               	movlw	-1
   957  0008CE  6E28               	movwf	printf@_val+2,c
   958  0008D0  6E29               	movwf	printf@_val+3,c
   959  0008D2  0E02               	movlw	2
   960  0008D4                     L1:
   961  0008D4  2623               	addwf	printf@ap,f,c
   962  0008D6  0E00               	movlw	0
   963  0008D8  2224               	addwfc	printf@ap+1,f,c
   964                           
   965                           ;doprnt.c: 1268: if((long)_val._val < 0) {
   966  0008DA  AE29               	btfss	printf@_val+3,7,c
   967  0008DC  D00A               	goto	l935
   968                           
   969                           ;doprnt.c: 1269: flag |= 0x03;
   970  0008DE  0E03               	movlw	3
   971  0008E0  1225               	iorwf	printf@flag,f,c
   972                           
   973                           ;doprnt.c: 1270: _val._val = -_val._val;
   974  0008E2  1E29               	comf	printf@_val+3,f,c
   975  0008E4  1E28               	comf	printf@_val+2,f,c
   976  0008E6  1E27               	comf	printf@_val+1,f,c
   977  0008E8  6C26               	negf	printf@_val,c
   978  0008EA  0E00               	movlw	0
   979  0008EC  2227               	addwfc	printf@_val+1,f,c
   980  0008EE  2228               	addwfc	printf@_val+2,f,c
   981  0008F0  2229               	addwfc	printf@_val+3,f,c
   982  0008F2                     l935:
   983                           
   984                           ;doprnt.c: 1271: }
   985                           ;doprnt.c: 1273: }
   986                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   987  0008F2  6E1F               	movwf	??_printf& (0+255),c
   988  0008F4  0E01               	movlw	1
   989  0008F6  6E2B               	movwf	printf@c,c
   990  0008F8  501F               	movf	??_printf& (0+255),w,c
   991  0008FA  502B               	movf	printf@c,w,c
   992  0008FC  0A0A               	xorlw	10
   993  0008FE  B4D8               	btfsc	status,2,c
   994  000900  D018               	goto	l949
   995                           
   996                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
   997  000902  502B               	movf	printf@c,w,c
   998  000904  0D04               	mullw	4
   999  000906  0E00               	movlw	low _dpowers
  1000  000908  24F3               	addwf	prodl,w,c
  1001  00090A  6EF6               	movwf	tblptrl,c
  1002  00090C  0E08               	movlw	high _dpowers
  1003  00090E  20F4               	addwfc	prodh,w,c
  1004  000910  6EF7               	movwf	tblptrh,c
  1005  000912  0009               	tblrd		*+
  1006  000914  50F5               	movf	tablat,w,c
  1007  000916  5C26               	subwf	printf@_val,w,c
  1008  000918  0009               	tblrd		*+
  1009  00091A  50F5               	movf	tablat,w,c
  1010  00091C  5827               	subwfb	printf@_val+1,w,c
  1011  00091E  0009               	tblrd		*+
  1012  000920  50F5               	movf	tablat,w,c
  1013  000922  5828               	subwfb	printf@_val+2,w,c
  1014  000924  0009               	tblrd		*+
  1015  000926  50F5               	movf	tablat,w,c
  1016  000928  5829               	subwfb	printf@_val+3,w,c
  1017  00092A  A0D8               	btfss	status,0,c
  1018  00092C  D002               	goto	l949
  1019                           
  1020                           ;doprnt.c: 1314: break;
  1021  00092E  2A2B               	incf	printf@c,f,c
  1022  000930  D7E4               	goto	L2
  1023  000932                     l949:
  1024                           
  1025                           ;doprnt.c: 1429: {
  1026                           ;doprnt.c: 1445: if(flag & 0x03)
  1027  000932  5025               	movf	printf@flag,w,c
  1028  000934  0B03               	andlw	3
  1029  000936  B4D8               	btfsc	status,2,c
  1030  000938  D006               	goto	l953
  1031                           
  1032                           ;doprnt.c: 1446: (putch('-') );
  1033  00093A  6E1F               	movwf	??_printf& (0+255),c
  1034  00093C  0E2D               	movlw	45
  1035  00093E  6E01               	movwf	?_putch,c
  1036  000940  501F               	movf	??_printf& (0+255),w,c
  1037  000942  ECA3  F006         	call	_putch	;wreg free
  1038  000946                     l953:
  1039                           
  1040                           ;doprnt.c: 1476: }
  1041                           ;doprnt.c: 1479: prec = c;
  1042  000946  502B               	movf	printf@c,w,c
  1043  000948  6E21               	movwf	printf@prec,c
  1044  00094A  6A22               	clrf	printf@prec+1,c
  1045  00094C  BE21               	btfsc	printf@prec,7,c
  1046  00094E  0622               	decf	printf@prec+1,f,c
  1047                           
  1048                           ;doprnt.c: 1481: while(prec--) {
  1049  000950  D03F               	goto	l959
  1050  000952                     l955:
  1051                           
  1052                           ;doprnt.c: 1485: {
  1053                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  1054  000952  C021  F01F         	movff	printf@prec,??_printf
  1055  000956  C022  F020         	movff	printf@prec+1,??_printf+1
  1056  00095A  90D8               	bcf	status,0,c
  1057  00095C  361F               	rlcf	??_printf,f,c
  1058  00095E  3620               	rlcf	??_printf+1,f,c
  1059  000960  90D8               	bcf	status,0,c
  1060  000962  361F               	rlcf	??_printf,f,c
  1061  000964  3620               	rlcf	??_printf+1,f,c
  1062  000966  0E00               	movlw	low _dpowers
  1063  000968  241F               	addwf	??_printf,w,c
  1064  00096A  6EF6               	movwf	tblptrl,c
  1065  00096C  0E08               	movlw	high _dpowers
  1066  00096E  2020               	addwfc	??_printf+1,w,c
  1067  000970  6EF7               	movwf	tblptrh,c
  1068  000972  0009               	tblrd		*+
  1069  000974  CFF5 F005          	movff	tablat,?___lldiv+4
  1070  000978  0009               	tblrd		*+
  1071  00097A  CFF5 F006          	movff	tablat,?___lldiv+5
  1072  00097E  0009               	tblrd		*+
  1073  000980  CFF5 F007          	movff	tablat,?___lldiv+6
  1074  000984  000A               	tblrd		*-
  1075  000986  CFF5 F008          	movff	tablat,?___lldiv+7
  1076  00098A  C026  F001         	movff	printf@_val,?___lldiv
  1077  00098E  C027  F002         	movff	printf@_val+1,?___lldiv+1
  1078  000992  C028  F003         	movff	printf@_val+2,?___lldiv+2
  1079  000996  C029  F004         	movff	printf@_val+3,?___lldiv+3
  1080  00099A  EC79  F005         	call	___lldiv	;wreg free
  1081  00099E  C004  F012         	movff	?___lldiv+3,?___llmod+3
  1082  0009A2  C003  F011         	movff	?___lldiv+2,?___llmod+2
  1083  0009A6  C002  F010         	movff	?___lldiv+1,?___llmod+1
  1084  0009AA  C001  F00F         	movff	?___lldiv,?___llmod
  1085  0009AE  0E0A               	movlw	10
  1086  0009B0  6E13               	movwf	?___llmod+4,c
  1087  0009B2  0E00               	movlw	0
  1088  0009B4  6E14               	movwf	?___llmod+5,c
  1089  0009B6  0E00               	movlw	0
  1090  0009B8  6E15               	movwf	?___llmod+6,c
  1091  0009BA  0E00               	movlw	0
  1092  0009BC  6E16               	movwf	?___llmod+7,c
  1093  0009BE  ECBC  F005         	call	___llmod	;wreg free
  1094  0009C2  500F               	movf	?___llmod,w,c
  1095  0009C4  0F30               	addlw	48
  1096  0009C6  6E2B               	movwf	printf@c,c
  1097                           
  1098                           ;doprnt.c: 1530: }
  1099                           ;doprnt.c: 1531: (putch(c) );
  1100  0009C8  C02B  F001         	movff	printf@c,?_putch
  1101  0009CC  ECA3  F006         	call	_putch	;wreg free
  1102  0009D0                     l959:
  1103  0009D0  0621               	decf	printf@prec,f,c
  1104  0009D2  A0D8               	btfss	status,0,c
  1105  0009D4  0622               	decf	printf@prec+1,f,c
  1106  0009D6  2821               	incf	printf@prec& (0+255),w,c
  1107  0009D8  B4D8               	btfsc	status,2,c
  1108  0009DA  2822               	incf	(printf@prec+1)& (0+255),w,c
  1109  0009DC  A4D8               	btfss	status,2,c
  1110  0009DE  D7B9               	goto	l955
  1111  0009E0                     l961:
  1112  0009E0  C019  FFF6         	movff	printf@f,tblptrl
  1113  0009E4  C01A  FFF7         	movff	printf@f+1,tblptrh
  1114  0009E8  4A19               	infsnz	printf@f,f,c
  1115  0009EA  2A1A               	incf	printf@f+1,f,c
  1116  0009EC  0008               	tblrd		*
  1117  0009EE  CFF5 F02B          	movff	tablat,printf@c
  1118  0009F2  662B               	tstfsz	printf@c& (0+255),c
  1119  0009F4  D72B               	goto	l909
  1120  0009F6                     l71:
  1121  0009F6  0012               	return	
  1122  0009F8                     __end_of_printf:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           prodh	equ	0xFF4
  1129                           prodl	equ	0xFF3
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           postinc1	equ	0xFE6
  1133                           postdec1	equ	0xFE5
  1134                           fsr1l	equ	0xFE1
  1135                           postinc2	equ	0xFDE
  1136                           postdec2	equ	0xFDD
  1137                           fsr2h	equ	0xFDA
  1138                           fsr2l	equ	0xFD9
  1139                           status	equ	0xFD8
  1140                           
  1141 ;; *************** function ___llmod *****************
  1142 ;; Defined at:
  1143 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\llmod.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  dividend        4   14[COMRAM] unsigned long 
  1146 ;;  divisor         4   18[COMRAM] unsigned long 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  counter         1   23[COMRAM] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  4   14[COMRAM] unsigned long 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1158 ;;      Params:         8       0       0       0       0       0       0       0       0
  1159 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1160 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1161 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1162 ;;Total ram usage:       10 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_printf
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text6
  1172  000B78                     __ptext6:
  1173                           	opt stack 0
  1174  000B78                     ___llmod:
  1175                           	opt stack 29
  1176                           
  1177                           ;incstack = 0
  1178                           ;incstack = 0
  1179  000B78  5016               	movf	___llmod@divisor+3,w,c
  1180  000B7A  1013               	iorwf	___llmod@divisor,w,c
  1181  000B7C  1014               	iorwf	___llmod@divisor+1,w,c
  1182  000B7E  1015               	iorwf	___llmod@divisor+2,w,c
  1183  000B80  B4D8               	btfsc	status,2,c
  1184  000B82  D026               	goto	l621
  1185  000B84  6E17               	movwf	??___llmod& (0+255),c
  1186  000B86  0E01               	movlw	1
  1187  000B88  6E18               	movwf	___llmod@counter,c
  1188  000B8A  5017               	movf	??___llmod& (0+255),w,c
  1189  000B8C  D006               	goto	l897
  1190  000B8E                     l895:
  1191  000B8E  90D8               	bcf	status,0,c
  1192  000B90  3613               	rlcf	___llmod@divisor,f,c
  1193  000B92  3614               	rlcf	___llmod@divisor+1,f,c
  1194  000B94  3615               	rlcf	___llmod@divisor+2,f,c
  1195  000B96  3616               	rlcf	___llmod@divisor+3,f,c
  1196  000B98  2A18               	incf	___llmod@counter,f,c
  1197  000B9A                     l897:
  1198  000B9A  AE16               	btfss	___llmod@divisor+3,7,c
  1199  000B9C  D7F8               	goto	l895
  1200  000B9E                     l899:
  1201  000B9E  5013               	movf	___llmod@divisor,w,c
  1202  000BA0  5C0F               	subwf	___llmod@dividend,w,c
  1203  000BA2  5014               	movf	___llmod@divisor+1,w,c
  1204  000BA4  5810               	subwfb	___llmod@dividend+1,w,c
  1205  000BA6  5015               	movf	___llmod@divisor+2,w,c
  1206  000BA8  5811               	subwfb	___llmod@dividend+2,w,c
  1207  000BAA  5016               	movf	___llmod@divisor+3,w,c
  1208  000BAC  5812               	subwfb	___llmod@dividend+3,w,c
  1209  000BAE  A0D8               	btfss	status,0,c
  1210  000BB0  D008               	goto	l903
  1211  000BB2  5013               	movf	___llmod@divisor,w,c
  1212  000BB4  5E0F               	subwf	___llmod@dividend,f,c
  1213  000BB6  5014               	movf	___llmod@divisor+1,w,c
  1214  000BB8  5A10               	subwfb	___llmod@dividend+1,f,c
  1215  000BBA  5015               	movf	___llmod@divisor+2,w,c
  1216  000BBC  5A11               	subwfb	___llmod@dividend+2,f,c
  1217  000BBE  5016               	movf	___llmod@divisor+3,w,c
  1218  000BC0  5A12               	subwfb	___llmod@dividend+3,f,c
  1219  000BC2                     l903:
  1220  000BC2  90D8               	bcf	status,0,c
  1221  000BC4  3216               	rrcf	___llmod@divisor+3,f,c
  1222  000BC6  3215               	rrcf	___llmod@divisor+2,f,c
  1223  000BC8  3214               	rrcf	___llmod@divisor+1,f,c
  1224  000BCA  3213               	rrcf	___llmod@divisor,f,c
  1225  000BCC  2E18               	decfsz	___llmod@counter,f,c
  1226  000BCE  D7E7               	goto	l899
  1227  000BD0                     l621:
  1228  000BD0  C00F  F00F         	movff	___llmod@dividend,?___llmod
  1229  000BD4  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  1230  000BD8  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  1231  000BDC  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  1232  000BE0  0012               	return	
  1233  000BE2                     __end_of___llmod:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           prodh	equ	0xFF4
  1240                           prodl	equ	0xFF3
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           postinc1	equ	0xFE6
  1244                           postdec1	equ	0xFE5
  1245                           fsr1l	equ	0xFE1
  1246                           postinc2	equ	0xFDE
  1247                           postdec2	equ	0xFDD
  1248                           fsr2h	equ	0xFDA
  1249                           fsr2l	equ	0xFD9
  1250                           status	equ	0xFD8
  1251                           
  1252 ;; *************** function ___lldiv *****************
  1253 ;; Defined at:
  1254 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lldiv.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  dividend        4    0[COMRAM] unsigned long 
  1257 ;;  divisor         4    4[COMRAM] unsigned long 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  quotient        4    9[COMRAM] unsigned long 
  1260 ;;  counter         1   13[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  4    0[COMRAM] unsigned long 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1270 ;;      Params:         8       0       0       0       0       0       0       0       0
  1271 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1272 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1273 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1274 ;;Total ram usage:       14 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_printf
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text7
  1284  000AF2                     __ptext7:
  1285                           	opt stack 0
  1286  000AF2                     ___lldiv:
  1287                           	opt stack 29
  1288                           
  1289                           ;incstack = 0
  1290                           ;incstack = 0
  1291  000AF2  0E00               	movlw	0
  1292  000AF4  6E0A               	movwf	___lldiv@quotient,c
  1293  000AF6  0E00               	movlw	0
  1294  000AF8  6E0B               	movwf	___lldiv@quotient+1,c
  1295  000AFA  0E00               	movlw	0
  1296  000AFC  6E0C               	movwf	___lldiv@quotient+2,c
  1297  000AFE  0E00               	movlw	0
  1298  000B00  6E0D               	movwf	___lldiv@quotient+3,c
  1299  000B02  5008               	movf	___lldiv@divisor+3,w,c
  1300  000B04  1005               	iorwf	___lldiv@divisor,w,c
  1301  000B06  1006               	iorwf	___lldiv@divisor+1,w,c
  1302  000B08  1007               	iorwf	___lldiv@divisor+2,w,c
  1303  000B0A  B4D8               	btfsc	status,2,c
  1304  000B0C  D02C               	goto	l611
  1305  000B0E  6E09               	movwf	??___lldiv& (0+255),c
  1306  000B10  0E01               	movlw	1
  1307  000B12  6E0E               	movwf	___lldiv@counter,c
  1308  000B14  5009               	movf	??___lldiv& (0+255),w,c
  1309  000B16  D006               	goto	l869
  1310  000B18                     l867:
  1311  000B18  90D8               	bcf	status,0,c
  1312  000B1A  3605               	rlcf	___lldiv@divisor,f,c
  1313  000B1C  3606               	rlcf	___lldiv@divisor+1,f,c
  1314  000B1E  3607               	rlcf	___lldiv@divisor+2,f,c
  1315  000B20  3608               	rlcf	___lldiv@divisor+3,f,c
  1316  000B22  2A0E               	incf	___lldiv@counter,f,c
  1317  000B24                     l869:
  1318  000B24  AE08               	btfss	___lldiv@divisor+3,7,c
  1319  000B26  D7F8               	goto	l867
  1320  000B28                     l871:
  1321  000B28  90D8               	bcf	status,0,c
  1322  000B2A  360A               	rlcf	___lldiv@quotient,f,c
  1323  000B2C  360B               	rlcf	___lldiv@quotient+1,f,c
  1324  000B2E  360C               	rlcf	___lldiv@quotient+2,f,c
  1325  000B30  360D               	rlcf	___lldiv@quotient+3,f,c
  1326  000B32  5005               	movf	___lldiv@divisor,w,c
  1327  000B34  5C01               	subwf	___lldiv@dividend,w,c
  1328  000B36  5006               	movf	___lldiv@divisor+1,w,c
  1329  000B38  5802               	subwfb	___lldiv@dividend+1,w,c
  1330  000B3A  5007               	movf	___lldiv@divisor+2,w,c
  1331  000B3C  5803               	subwfb	___lldiv@dividend+2,w,c
  1332  000B3E  5008               	movf	___lldiv@divisor+3,w,c
  1333  000B40  5804               	subwfb	___lldiv@dividend+3,w,c
  1334  000B42  A0D8               	btfss	status,0,c
  1335  000B44  D009               	goto	l879
  1336  000B46  5005               	movf	___lldiv@divisor,w,c
  1337  000B48  5E01               	subwf	___lldiv@dividend,f,c
  1338  000B4A  5006               	movf	___lldiv@divisor+1,w,c
  1339  000B4C  5A02               	subwfb	___lldiv@dividend+1,f,c
  1340  000B4E  5007               	movf	___lldiv@divisor+2,w,c
  1341  000B50  5A03               	subwfb	___lldiv@dividend+2,f,c
  1342  000B52  5008               	movf	___lldiv@divisor+3,w,c
  1343  000B54  5A04               	subwfb	___lldiv@dividend+3,f,c
  1344  000B56  800A               	bsf	___lldiv@quotient,0,c
  1345  000B58                     l879:
  1346  000B58  90D8               	bcf	status,0,c
  1347  000B5A  3208               	rrcf	___lldiv@divisor+3,f,c
  1348  000B5C  3207               	rrcf	___lldiv@divisor+2,f,c
  1349  000B5E  3206               	rrcf	___lldiv@divisor+1,f,c
  1350  000B60  3205               	rrcf	___lldiv@divisor,f,c
  1351  000B62  2E0E               	decfsz	___lldiv@counter,f,c
  1352  000B64  D7E1               	goto	l871
  1353  000B66                     l611:
  1354  000B66  C00A  F001         	movff	___lldiv@quotient,?___lldiv
  1355  000B6A  C00B  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1356  000B6E  C00C  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1357  000B72  C00D  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1358  000B76  0012               	return	
  1359  000B78                     __end_of___lldiv:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           prodh	equ	0xFF4
  1366                           prodl	equ	0xFF3
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           postinc1	equ	0xFE6
  1370                           postdec1	equ	0xFE5
  1371                           fsr1l	equ	0xFE1
  1372                           postinc2	equ	0xFDE
  1373                           postdec2	equ	0xFDD
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function _putch *****************
  1379 ;; Defined at:
  1380 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\putch.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  c               1    0[COMRAM] unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;		None               void
  1387 ;; Registers used:
  1388 ;;		None
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1394 ;;      Params:         1       0       0       0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1397 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1398 ;;Total ram usage:        1 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_printf
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text8
  1408  000D46                     __ptext8:
  1409                           	opt stack 0
  1410  000D46                     _putch:
  1411                           	opt stack 29
  1412                           
  1413                           ;incstack = 0
  1414                           ;incstack = 0
  1415  000D46  0012               	return	
  1416  000D48                     __end_of_putch:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           tblptrh	equ	0xFF7
  1420                           tblptrl	equ	0xFF6
  1421                           tablat	equ	0xFF5
  1422                           prodh	equ	0xFF4
  1423                           prodl	equ	0xFF3
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           postinc1	equ	0xFE6
  1427                           postdec1	equ	0xFE5
  1428                           fsr1l	equ	0xFE1
  1429                           postinc2	equ	0xFDE
  1430                           postdec2	equ	0xFDD
  1431                           fsr2h	equ	0xFDA
  1432                           fsr2l	equ	0xFD9
  1433                           status	equ	0xFD8
  1434                           
  1435 ;; *************** function _putsUSART *****************
  1436 ;; Defined at:
  1437 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uputs.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  data            2    1[COMRAM] PTR unsigned char 
  1440 ;;		 -> main@Message1(10), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1452 ;;      Params:         2       0       0       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1455 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    1
  1459 ;; This function calls:
  1460 ;;		_WriteUSART
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text9
  1467  000CC6                     __ptext9:
  1468                           	opt stack 0
  1469  000CC6                     _putsUSART:
  1470                           	opt stack 29
  1471  000CC6                     l152:
  1472  000CC6  A2AC               	btfss	4012,1,c	;volatile
  1473  000CC8  D7FE               	goto	l152
  1474  000CCA  C002  FFD9         	movff	putsUSART@data,fsr2l
  1475  000CCE  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  1476  000CD2  50DF               	movf	indf2,w,c
  1477  000CD4  6E01               	movwf	?_WriteUSART,c
  1478  000CD6  EC8A  F006         	call	_WriteUSART	;wreg free
  1479  000CDA  C002  FFD9         	movff	putsUSART@data,fsr2l
  1480  000CDE  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  1481  000CE2  4A02               	infsnz	putsUSART@data,f,c
  1482  000CE4  2A03               	incf	putsUSART@data+1,f,c
  1483  000CE6  50DF               	movf	indf2,w,c
  1484  000CE8  B4D8               	btfsc	status,2,c
  1485  000CEA  0012               	return	
  1486  000CEC  D7EC               	goto	l152
  1487  000CEE                     __end_of_putsUSART:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           prodh	equ	0xFF4
  1494                           prodl	equ	0xFF3
  1495                           postinc0	equ	0xFEE
  1496                           wreg	equ	0xFE8
  1497                           postinc1	equ	0xFE6
  1498                           postdec1	equ	0xFE5
  1499                           fsr1l	equ	0xFE1
  1500                           indf2	equ	0xFDF
  1501                           postinc2	equ	0xFDE
  1502                           postdec2	equ	0xFDD
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _WriteUSART *****************
  1508 ;; Defined at:
  1509 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  data            1    0[COMRAM] unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;		None               void
  1516 ;; Registers used:
  1517 ;;		None
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1523 ;;      Params:         1       0       0       0       0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1526 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1527 ;;Total ram usage:        1 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_putsUSART
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text10
  1537  000D14                     __ptext10:
  1538                           	opt stack 0
  1539  000D14                     _WriteUSART:
  1540                           	opt stack 29
  1541                           
  1542                           ;incstack = 0
  1543                           ;incstack = 0
  1544  000D14  ACAC               	btfss	4012,6,c	;volatile
  1545  000D16  D003               	goto	l165
  1546  000D18  90AC               	bcf	4012,0,c	;volatile
  1547  000D1A  B258               	btfsc	_USART_Status,1,c
  1548  000D1C  80AC               	bsf	4012,0,c	;volatile
  1549  000D1E                     l165:
  1550  000D1E  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  1551  000D22  0012               	return	
  1552  000D24                     __end_of_WriteUSART:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           prodh	equ	0xFF4
  1559                           prodl	equ	0xFF3
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postinc1	equ	0xFE6
  1563                           postdec1	equ	0xFE5
  1564                           fsr1l	equ	0xFE1
  1565                           indf2	equ	0xFDF
  1566                           postinc2	equ	0xFDE
  1567                           postdec2	equ	0xFDD
  1568                           fsr2h	equ	0xFDA
  1569                           fsr2l	equ	0xFD9
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _SetChanADC *****************
  1573 ;; Defined at:
  1574 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcsetch.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  channel         1    0[COMRAM] unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;		None               void
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1588 ;;      Params:         1       0       0       0       0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1590 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1591 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1592 ;;Total ram usage:        2 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text11
  1602  000CEE                     __ptext11:
  1603                           	opt stack 0
  1604  000CEE                     _SetChanADC:
  1605                           	opt stack 30
  1606                           
  1607                           ;incstack = 0
  1608                           ;incstack = 0
  1609  000CEE  CFC2 F002          	movff	4034,??_SetChanADC	;volatile
  1610  000CF2  0EC3               	movlw	195
  1611  000CF4  1602               	andwf	??_SetChanADC,f,c
  1612  000CF6  90D8               	bcf	status,0,c
  1613  000CF8  3001               	rrcf	SetChanADC@channel,w,c
  1614  000CFA  0B3C               	andlw	60
  1615  000CFC  1002               	iorwf	??_SetChanADC,w,c
  1616  000CFE  6EC2               	movwf	4034,c	;volatile
  1617  000D00  0012               	return	
  1618  000D02                     __end_of_SetChanADC:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           postinc1	equ	0xFE6
  1629                           postdec1	equ	0xFE5
  1630                           fsr1l	equ	0xFE1
  1631                           indf2	equ	0xFDF
  1632                           postinc2	equ	0xFDE
  1633                           postdec2	equ	0xFDD
  1634                           fsr2h	equ	0xFDA
  1635                           fsr2l	equ	0xFD9
  1636                           status	equ	0xFD8
  1637                           
  1638 ;; *************** function _OpenADC *****************
  1639 ;; Defined at:
  1640 ;;		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  config          1    0[COMRAM] unsigned char 
  1643 ;;  config2         1    1[COMRAM] unsigned char 
  1644 ;;  portconfig      1    2[COMRAM] unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         3       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        5 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text12
  1670  000BE2                     __ptext12:
  1671                           	opt stack 0
  1672  000BE2                     _OpenADC:
  1673                           	opt stack 30
  1674                           
  1675                           ;incstack = 0
  1676                           ;incstack = 0
  1677  000BE2  0E00               	movlw	0
  1678  000BE4  6EC2               	movwf	4034,c	;volatile
  1679  000BE6  0E00               	movlw	0
  1680  000BE8  6EC0               	movwf	4032,c	;volatile
  1681  000BEA  90D8               	bcf	status,0,c
  1682  000BEC  3002               	rrcf	OpenADC@config2,w,c
  1683  000BEE  0B3C               	andlw	60
  1684  000BF0  6EC2               	movwf	4034,c	;volatile
  1685  000BF2  C002  F004         	movff	OpenADC@config2,??_OpenADC
  1686  000BF6  3A04               	swapf	??_OpenADC,f,c
  1687  000BF8  0EF0               	movlw	240
  1688  000BFA  1604               	andwf	??_OpenADC,f,c
  1689  000BFC  0E30               	movlw	48
  1690  000BFE  1604               	andwf	??_OpenADC,f,c
  1691  000C00  5003               	movf	OpenADC@portconfig,w,c
  1692  000C02  0B0F               	andlw	15
  1693  000C04  1004               	iorwf	??_OpenADC,w,c
  1694  000C06  6EC1               	movwf	4033,c	;volatile
  1695  000C08  C001  F004         	movff	OpenADC@config,??_OpenADC
  1696  000C0C  90D8               	bcf	status,0,c
  1697  000C0E  3604               	rlcf	??_OpenADC,f,c
  1698  000C10  90D8               	bcf	status,0,c
  1699  000C12  3604               	rlcf	??_OpenADC,f,c
  1700  000C14  0E38               	movlw	56
  1701  000C16  1604               	andwf	??_OpenADC,f,c
  1702  000C18  C001  F005         	movff	OpenADC@config,??_OpenADC+1
  1703  000C1C  3A05               	swapf	??_OpenADC+1,f,c
  1704  000C1E  0E0F               	movlw	15
  1705  000C20  1605               	andwf	??_OpenADC+1,f,c
  1706  000C22  0E07               	movlw	7
  1707  000C24  1605               	andwf	??_OpenADC+1,f,c
  1708  000C26  5001               	movf	OpenADC@config,w,c
  1709  000C28  0B80               	andlw	128
  1710  000C2A  1005               	iorwf	??_OpenADC+1,w,c
  1711  000C2C  1004               	iorwf	??_OpenADC,w,c
  1712  000C2E  6EC0               	movwf	4032,c	;volatile
  1713  000C30  AE02               	btfss	OpenADC@config2,7,c
  1714  000C32  D003               	goto	l98
  1715  000C34  9C9E               	bcf	3998,6,c	;volatile
  1716  000C36  8C9D               	bsf	3997,6,c	;volatile
  1717  000C38  8CF2               	bsf	intcon,6,c	;volatile
  1718  000C3A                     l98:
  1719  000C3A  80C2               	bsf	4034,0,c	;volatile
  1720  000C3C  0012               	return	
  1721  000C3E                     __end_of_OpenADC:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           postinc1	equ	0xFE6
  1733                           postdec1	equ	0xFE5
  1734                           fsr1l	equ	0xFE1
  1735                           indf2	equ	0xFDF
  1736                           postinc2	equ	0xFDE
  1737                           postdec2	equ	0xFDD
  1738                           fsr2h	equ	0xFDA
  1739                           fsr2l	equ	0xFD9
  1740                           status	equ	0xFD8
  1741                           
  1742 ;; *************** function _OpenUSART *****************
  1743 ;; Defined at:
  1744 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  config          1    0[COMRAM] unsigned char 
  1747 ;;  spbrg           2    1[COMRAM] unsigned int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;		None               void
  1752 ;; Registers used:
  1753 ;;		wreg, status,2
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1759 ;;      Params:         3       0       0       0       0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1762 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1763 ;;Total ram usage:        3 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text13
  1773  000C3E                     __ptext13:
  1774                           	opt stack 0
  1775  000C3E                     _OpenUSART:
  1776                           	opt stack 30
  1777                           
  1778                           ;incstack = 0
  1779                           ;incstack = 0
  1780  000C3E  0E00               	movlw	0
  1781  000C40  6EAC               	movwf	4012,c	;volatile
  1782  000C42  0E00               	movlw	0
  1783  000C44  6EAB               	movwf	4011,c	;volatile
  1784  000C46  B001               	btfsc	OpenUSART@config,0,c
  1785  000C48  88AC               	bsf	4012,4,c	;volatile
  1786  000C4A  A201               	btfss	OpenUSART@config,1,c
  1787  000C4C  D002               	goto	l133
  1788  000C4E  8CAC               	bsf	4012,6,c	;volatile
  1789  000C50  8CAB               	bsf	4011,6,c	;volatile
  1790  000C52                     l133:
  1791  000C52  B401               	btfsc	OpenUSART@config,2,c
  1792  000C54  8EAC               	bsf	4012,7,c	;volatile
  1793  000C56  A601               	btfss	OpenUSART@config,3,c
  1794  000C58  D002               	goto	l135
  1795  000C5A  88AB               	bsf	4011,4,c	;volatile
  1796  000C5C  D001               	goto	l136
  1797  000C5E                     l135:
  1798  000C5E  8AAB               	bsf	4011,5,c	;volatile
  1799  000C60                     l136:
  1800  000C60  B801               	btfsc	OpenUSART@config,4,c
  1801  000C62  84AC               	bsf	4012,2,c	;volatile
  1802  000C64  989E               	bcf	3998,4,c	;volatile
  1803  000C66  BA01               	btfsc	OpenUSART@config,5,c
  1804  000C68  86AB               	bsf	4011,3,c	;volatile
  1805  000C6A  AC01               	btfss	OpenUSART@config,6,c
  1806  000C6C  D002               	goto	l139
  1807  000C6E  8A9D               	bsf	3997,5,c	;volatile
  1808  000C70  D001               	goto	l140
  1809  000C72                     l139:
  1810  000C72  9A9D               	bcf	3997,5,c	;volatile
  1811  000C74                     l140:
  1812  000C74  9A9E               	bcf	3998,5,c	;volatile
  1813  000C76  AE01               	btfss	OpenUSART@config,7,c
  1814  000C78  D002               	goto	l141
  1815  000C7A  889D               	bsf	3997,4,c	;volatile
  1816  000C7C  D001               	goto	l142
  1817  000C7E                     l141:
  1818  000C7E  989D               	bcf	3997,4,c	;volatile
  1819  000C80                     l142:
  1820  000C80  C002  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1821  000C84  5003               	movf	OpenUSART@spbrg+1,w,c
  1822  000C86  6EB0               	movwf	4016,c	;volatile
  1823  000C88  8AAC               	bsf	4012,5,c	;volatile
  1824  000C8A  8EAB               	bsf	4011,7,c	;volatile
  1825  000C8C  9C94               	bcf	3988,6,c	;volatile
  1826  000C8E  8E94               	bsf	3988,7,c	;volatile
  1827  000C90  B8AC               	btfsc	4012,4,c	;volatile
  1828  000C92  BEAC               	btfsc	4012,7,c	;volatile
  1829  000C94  D001               	goto	l144
  1830  000C96  8C94               	bsf	3988,6,c	;volatile
  1831  000C98                     l144:
  1832  000C98  0012               	return	
  1833  000C9A                     __end_of_OpenUSART:
  1834                           	opt stack 0
  1835                           tblptru	equ	0xFF8
  1836                           tblptrh	equ	0xFF7
  1837                           tblptrl	equ	0xFF6
  1838                           tablat	equ	0xFF5
  1839                           prodh	equ	0xFF4
  1840                           prodl	equ	0xFF3
  1841                           intcon	equ	0xFF2
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postinc1	equ	0xFE6
  1845                           postdec1	equ	0xFE5
  1846                           fsr1l	equ	0xFE1
  1847                           indf2	equ	0xFDF
  1848                           postinc2	equ	0xFDE
  1849                           postdec2	equ	0xFDD
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodh	equ	0xFF4
  1858                           prodl	equ	0xFF3
  1859                           intcon	equ	0xFF2
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           postinc1	equ	0xFE6
  1863                           postdec1	equ	0xFE5
  1864                           fsr1l	equ	0xFE1
  1865                           indf2	equ	0xFDF
  1866                           postinc2	equ	0xFDE
  1867                           postdec2	equ	0xFDD
  1868                           fsr2h	equ	0xFDA
  1869                           fsr2l	equ	0xFD9
  1870                           status	equ	0xFD8
  1871                           
  1872                           	psect	rparam
  1873  0000                     tblptru	equ	0xFF8
  1874                           tblptrh	equ	0xFF7
  1875                           tblptrl	equ	0xFF6
  1876                           tablat	equ	0xFF5
  1877                           prodh	equ	0xFF4
  1878                           prodl	equ	0xFF3
  1879                           intcon	equ	0xFF2
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           postinc1	equ	0xFE6
  1883                           postdec1	equ	0xFE5
  1884                           fsr1l	equ	0xFE1
  1885                           indf2	equ	0xFDF
  1886                           postinc2	equ	0xFDE
  1887                           postdec2	equ	0xFDD
  1888                           fsr2h	equ	0xFDA
  1889                           fsr2l	equ	0xFD9
  1890                           status	equ	0xFD8


Data Sizes:
    Strings     25
    Constant    40
    Data        17
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      88
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    putsUSART@data	PTR unsigned char  size(2) Largest target is 10
		 -> main@Message1(COMRAM[10]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[11]), STR_1(CODE[14]), 

    ?_printf	int  size(2) Largest target is 0

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S99$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___llmod
    ___llmod->___lldiv
    _putsUSART->_WriteUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0     855
                                             43 COMRAM    27    27      0
                          _OpenUSART
                            _OpenADC
                         _SetChanADC
                          _putsUSART
                             _printf
                       _Delay100TCYx
                         _ConvertADC
                            _BusyADC
                            _ReadADC
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay100TCYx                                         1     0      1      15
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    13      6     495
                                             24 COMRAM    19    13      6
                              _putch
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     105
                                             14 COMRAM    10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     105
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     0      1       0
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2      45
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     0      1      15
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     1      1      15
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     2      3     105
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     150
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _OpenADC
   _SetChanADC
   _putsUSART
     _WriteUSART
   _printf
     _putch
     ___lldiv
     ___llmod
       ___lldiv (ARG)
   _Delay100TCYx
   _ConvertADC
   _BusyADC
   _ReadADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     46      58       1       92.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58      20        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Mon Jan 13 07:55:51 2014

                     l71 09F6                       l58 0898                       l98 0C3A  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l140 0C74                      l141 0C7E  
                    l133 0C52                      l142 0C80                      l135 0C5E  
                    l144 0C98                      l136 0C60                      l152 0CC6  
                    l139 0C72                      l165 0D1E                      l611 0B66  
                    l621 0BD0                      l378 0D24                      l903 0BC2  
                    l913 085E                      l915 0868                      l925 08B8  
                    l909 084C                      l871 0B28                      l935 08F2  
                    l919 086A                      l953 0946                      l961 09E0  
                    l867 0B18                      l955 0952                      l869 0B24  
                    l949 0932                      l879 0B58                      l895 0B8E  
                    l959 09D0                      l991 0AB4                      l897 0B9A  
                    l985 0A98                      l899 0B9E             __CFG_CPB$OFF 000000  
                    u311 0A02                      u321 0A14                      u347 0D26  
                    wreg 000FE8             main@Message1 0036             main@Message2 002F  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     STR_1 0828  
                   STR_2 0836                     _main 09F8                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000          __end_of_BusyADC 0D42  
        __end_of_ReadADC 0D3C          __end_of_OpenADC 0C3E            __CFG_PLLDIV$5 000000  
                  ?_main 0001    __size_of_Delay100TCYx 000E          __end_of___lldiv 0B78  
        __end_of___llmod 0BE2                    _RCSTA 000FAB                    _SPBRG 000FAF  
          __CFG_USBDIV$2 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000           __CFG_EBTRB$OFF 000000  
        __end_of_dpowers 0828                    _putch 0D46               _ConvertADC 0D42  
                  tablat 000FF5                    status 000FD8           WriteUSART@data 0001  
        __initialization 0C9A             _Delay100TCYx 0D24             __end_of_main 0AF2  
                 ??_main 002C            __activetblptr 000002               _SetChanADC 0CEE  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 000F                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_putch 0001                   _SPBRGH 000FB0                ??_BusyADC 0001  
              ??_ReadADC 0003           __CFG_VREGEN$ON 000000                ??_OpenADC 0004  
         __CFG_XINST$OFF 000000       __size_of_OpenUSART 005C           __CFG_STVREN$ON 000000  
              ??___lldiv 0009                ??___llmod 0017                   _printf 0842  
           __pdataCOMRAM 0047             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
            ?_ConvertADC 0001               __accesstop 0060  __end_of__initialization 0CBC  
        __CFG_PBADEN$OFF 000000               _WriteUSART 0D14           __pcstackCOMRAM 0001  
          __end_of_putch 0D48              ?_SetChanADC 0001        __end_of_OpenUSART 0C9A  
                ??_putch 0002            putsUSART@data 0002      __size_of_ConvertADC 0004  
                ?_printf 0019       __size_of_putsUSART 0028                  _BusyADC 0D3C  
                _ReadADC 0D32                  _OpenADC 0BE2                  __Hparam 0000  
    __size_of_SetChanADC 0014                  __Lparam 0000              ?_WriteUSART 0001  
                ___lldiv 0AF2                  ___llmod 0B78             __psmallconst 0800  
                __pcinit 0C9A                  __ramtop 0800                  __ptext0 09F8  
                __ptext1 0D32                  __ptext2 0D3C                  __ptext3 0D42  
                __ptext4 0D24                  __ptext5 0842                  __ptext6 0B78  
                __ptext7 0AF2                  __ptext8 0D46                  __ptext9 0CC6  
        __size_of_printf 01B6                  _dpowers 0800           OpenADC@config2 0002  
   end_of_initialization 0CBC            __Lmediumconst 0000          ___lldiv@divisor 0005  
        ___lldiv@counter 000E                _RCSTAbits 000FAB                  printf@c 002B  
                printf@f 0019                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
      __end_of_putsUSART 0CEE                _TRISCbits 000F94      __size_of_WriteUSART 0010  
           ??_ConvertADC 0001                _TXSTAbits 000FAC         Delay100TCYx@unit 0001  
          __pidataCOMRAM 0D02       __end_of_ConvertADC 0D46             ??_SetChanADC 0002  
         __end_of_printf 09F8      start_initialization 0C9A                _OpenUSART 0C3E  
        ___llmod@divisor 0013          ___llmod@counter 0018       __end_of_SetChanADC 0D02  
       __CFG_LPT1OSC$OFF 000000                 ??_printf 001F              __pbssCOMRAM 0058  
    __end_of__stringdata 0841               ?_OpenUSART 0001                 ?_BusyADC 0001  
               ?_ReadADC 0001        OpenADC@portconfig 0003                 ?_OpenADC 0001  
           ??_WriteUSART 0002            ?_Delay100TCYx 0001                 ?___lldiv 0001  
               ?___llmod 000F              __smallconst 0800       __end_of_WriteUSART 0D24  
         __size_of_putch 0002            OpenADC@config 0001                 _PIE1bits 000F9D  
         ??_Delay100TCYx 0002                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
              main@F4951 0047                main@F4953 0051               _ADCON0bits 000FC2  
              _putsUSART 0CC6              __stringdata 0828               printf@_val 0026  
             printf@flag 0025               printf@prec 0021                copy_data0 0CB0  
            ??_OpenUSART 0004          OpenUSART@config 0001         __size_of_BusyADC 0006  
       __size_of_ReadADC 000A                 __Hrparam 0000         __size_of_OpenADC 005C  
               __Lrparam 0000         __size_of___lldiv 0086         __size_of___llmod 006A  
             ?_putsUSART 0002                 __ptext10 0D14                 __ptext11 0CEE  
               __ptext12 0BE2                 __ptext13 0C3E            __size_of_main 00FA  
               main@DATA 0040                 main@data 0043    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2           OpenUSART@spbrg 0002     __end_of_Delay100TCYx 0D32  
       ___lldiv@dividend 0001        SetChanADC@channel 0001                 printf@ap 0023  
            ??_putsUSART 0004         ___lldiv@quotient 000A       __CFG_FOSC$HSPLL_HS 000000  
           _USART_Status 0058  
