CCS PCM C Compiler, Version 3.185, 22500

               Filename: C:\Users\FMV\Dropbox\PIC-project\PIC CCS\capture\compare.LST

               ROM used: 196 (2%)
                         Largest free fragment is 2048
               RAM used: 14 (8%) at main() level
                         15 (9%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   074
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.0
001C:  GOTO   01F
001D:  BTFSC  0C.0
001E:  GOTO   03E
001F:  MOVLW  8C
0020:  MOVWF  04
0021:  BTFSS  00.2
0022:  GOTO   025
0023:  BTFSC  0C.2
0024:  GOTO   041
0025:  MOVLW  8D
0026:  MOVWF  04
0027:  BTFSS  00.0
0028:  GOTO   02B
0029:  BTFSC  0D.0
002A:  GOTO   044
002B:  MOVF   22,W
002C:  MOVWF  04
002D:  MOVF   23,W
002E:  MOVWF  77
002F:  MOVF   24,W
0030:  MOVWF  78
0031:  MOVF   25,W
0032:  MOVWF  79
0033:  MOVF   26,W
0034:  MOVWF  7A
0035:  MOVF   27,W
0036:  MOVWF  7B
0037:  MOVF   20,W
0038:  MOVWF  0A
0039:  SWAPF  21,W
003A:  MOVWF  03
003B:  SWAPF  7F,F
003C:  SWAPF  7F,W
003D:  RETFIE
003E:  BCF    0A.3
003F:  BCF    0A.4
0040:  GOTO   054
0041:  BCF    0A.3
0042:  BCF    0A.4
0043:  GOTO   047
0044:  BCF    0A.3
0045:  BCF    0A.4
0046:  GOTO   04C
....................  #define	PIN1	PIN_C3  
.................... #define	PIN2	PIN_B2  
....................   
.................... #include <16f877a.h> 
....................  //////// Standard Header file for the PIC16F877A device ////////////////  
.................... #device PIC16F877A  
.................... #list  
....................  
.................... #fuses HS,NOWDT,NOPROTECT,PUT,BROWNOUT,NOLVP  
.................... #use delay(clock = 20000000)					   // clock 20MHz  
*
0061:  MOVLW  29
0062:  MOVWF  04
0063:  MOVF   00,W
0064:  BTFSC  03.2
0065:  GOTO   073
0066:  MOVLW  06
0067:  MOVWF  78
0068:  CLRF   77
0069:  DECFSZ 77,F
006A:  GOTO   069
006B:  DECFSZ 78,F
006C:  GOTO   068
006D:  MOVLW  7B
006E:  MOVWF  77
006F:  DECFSZ 77,F
0070:  GOTO   06F
0071:  DECFSZ 00,F
0072:  GOTO   066
0073:  RETLW  00
.................... #use fast_io(C)											 // 固定入力モード  
....................   
.................... void ccp1_int(void);									 // プロトタイプ  
.................... void ccp2_int(void);									 // プロトタイプ  
.................... void intval(void);  
....................   
....................   
.................... //メイン関数////////////////////////////////////  
.................... main()  
.................... {  
0074:  CLRF   04
0075:  MOVLW  1F
0076:  ANDWF  03,F
0077:  MOVLW  06
0078:  BSF    03.5
0079:  MOVWF  1F
007A:  MOVLW  07
007B:  BCF    03.5
007C:  MOVWF  1F
.................... 	set_tris_a(0x00);								    
007D:  MOVLW  00
007E:  BSF    03.5
007F:  MOVWF  05
.................... 	set_tris_b(0x00);  
0080:  MOVWF  06
.................... 	set_tris_c(0x00);								  //RC 7-0:OUTs  
0081:  MOVWF  07
.................... 	set_tris_d(0x00);  
0082:  MOVWF  08
.................... 	output_bit(PIN1,1);  
0083:  BCF    03.5
0084:  BSF    07.3
.................... 	output_bit(PIN2,1);  
0085:  BSF    06.2
0086:  BSF    03.5
0087:  BCF    06.2
.................... 	  
.................... 	setup_timer_1(T1_INTERNAL | T1_DIV_BY_2);  
0088:  MOVLW  95
0089:  BCF    03.5
008A:  MOVWF  10
.................... 	setup_ccp1(CCP_COMPARE_INT);		  // CCP1コンペアマッチ割込み設定  
008B:  MOVLW  0A
008C:  MOVWF  17
.................... 	setup_ccp2(CCP_COMPARE_INT);		  // CCP2コンペアマッチ割込み設定  
008D:  MOVWF  1D
.................... 	set_timer1(15535);						  
008E:  MOVLW  3C
008F:  MOVWF  0F
0090:  MOVLW  AF
0091:  MOVWF  0E
.................... 	  
.................... 	CCP_1 = 18035;									  // パルス幅 0  
0092:  MOVLW  46
0093:  MOVWF  16
0094:  MOVLW  73
0095:  MOVWF  15
.................... 	CCP_2 = 18035;							   //  
0096:  MOVLW  46
0097:  MOVWF  1C
0098:  MOVLW  73
0099:  MOVWF  1B
.................... 	  
.................... 	enable_interrupts(INT_CCP1);			   //CCP1コンペアマッチ割込み許可  
009A:  BSF    03.5
009B:  BSF    0C.2
.................... 	enable_interrupts(INT_CCP2);			   //CCP2コンペアマッチ	  
009C:  BSF    0D.0
.................... 	enable_interrupts(INT_TIMER1);  
009D:  BSF    0C.0
.................... 	enable_interrupts(GLOBAL);			  //全設定割込み許可  
009E:  MOVLW  C0
009F:  BCF    03.5
00A0:  IORWF  0B,F
....................   
.................... 	while(1)  
.................... 	{  
.................... 			CCP_1 = 28035;						  //パルス幅 5mS  
00A1:  MOVLW  6D
00A2:  MOVWF  16
00A3:  MOVLW  83
00A4:  MOVWF  15
.................... 			delay_ms(1000);  
00A5:  MOVLW  04
00A6:  MOVWF  28
00A7:  MOVLW  FA
00A8:  MOVWF  29
00A9:  CALL   061
00AA:  DECFSZ 28,F
00AB:  GOTO   0A7
.................... 			CCP_1 = 40535;						  //パルス幅 10mS  
00AC:  MOVLW  9E
00AD:  MOVWF  16
00AE:  MOVLW  57
00AF:  MOVWF  15
.................... 			delay_ms(2000);  
00B0:  MOVLW  08
00B1:  MOVWF  28
00B2:  MOVLW  FA
00B3:  MOVWF  29
00B4:  CALL   061
00B5:  DECFSZ 28,F
00B6:  GOTO   0B2
.................... 			CCP_1 = 65532;						  //パルス幅 20mS  
00B7:  MOVLW  FF
00B8:  MOVWF  16
00B9:  MOVLW  FC
00BA:  MOVWF  15
.................... 			delay_ms(3000);  
00BB:  MOVLW  0C
00BC:  MOVWF  28
00BD:  MOVLW  FA
00BE:  MOVWF  29
00BF:  CALL   061
00C0:  DECFSZ 28,F
00C1:  GOTO   0BD
.................... 	}  
00C2:  GOTO   0A1
.................... }  
....................   
.................... //パルスクリア///////////////////////////////////  
.................... #INT_CCP1  
.................... void ccp1_int()  
00C3:  SLEEP
.................... {  
.................... 	  output_bit(PIN1,0);  
*
0047:  BCF    07.3
.................... }  
....................   
.................... //パルス出力/////////////////////////////////////  
0048:  BCF    0C.2
0049:  BCF    0A.3
004A:  BCF    0A.4
004B:  GOTO   02B
.................... #INT_CCP2  
.................... void ccp2_int()  
.................... {  
.................... 	output_bit(PIN2,0);  
004C:  BCF    06.2
004D:  BSF    03.5
004E:  BCF    06.2
.................... }  
.................... //	timer1割り込み関数  
004F:  BCF    03.5
0050:  BCF    0D.0
0051:  BCF    0A.3
0052:  BCF    0A.4
0053:  GOTO   02B
.................... #int_timer1  
.................... void intval()   
.................... {  
.................... 	  
.................... 	set_timer1(15535);  
0054:  MOVLW  3C
0055:  MOVWF  0F
0056:  MOVLW  AF
0057:  MOVWF  0E
.................... 	output_bit(PIN1,1);  
0058:  BSF    07.3
.................... 	output_bit(PIN2,1);  
0059:  BSF    06.2
005A:  BSF    03.5
005B:  BCF    06.2
.................... 	  
.................... }  
....................   
.................... /*	備考  
.................... 周期を20msにするために、timer1の値に15535を入れているので、  
.................... そこからカウントアップされる。  
.................... つまりサーボの角度を0度にしようとすれば、1msにすればよいので、  
.................... 1000us=0.2us * 2 * x より、x=2500 カウント必要となる。  
.................... よって、15535 + 2500 = 18035 の値をCCP_1に入れればよい  
....................   
.................... 同様に90度するには  
.................... 1500 = 0.4 * x  
.................... x=3750  
.................... よって、3750 + 15535 = 19285  
....................   
.................... また180度の場合は  
.................... 2000 = 0.4 * x  
.................... 5000 + 15535 = 20535  
....................   
.................... */  
....................  
005C:  BCF    03.5
005D:  BCF    0C.0
005E:  BCF    0A.3
005F:  BCF    0A.4
0060:  GOTO   02B

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
